// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  //tabela de usuario autenticado ou nao
  id         String   @id @default(uuid())
  username   String   @unique
  name       String
  email      String?  @unique
  avatar_url String?
  created_at DateTime @default(now())

  accounts      Account[]
  sessions      Session[]
  timeIntervals UserTimeInterval[] //ele nao cria coluna no db
  //um usuario possui varios  UserTimeInterval

  @@map("users") //definir nome da tabela
}

model Account {
  //account e a indentificacao da autenticacao
  //podendo usar varios providers
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts") //definir nome da tabela
}

model Session {
  //cada vez que usuario fizer login ter uma sessao
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions") //definir nome da tabela
}

model UserTimeInterval {
  id                    String @id @default(uuid())
  week_day              Int
  time_start_in_minutes Int
  time_end_in_minutes   Int

  user    User   @relation(fields: [user_id], references: [id])
  user_id String //aqui ele realmente cria uma tabela
  //um UserTimeInterval pertece a um usuario

  @@map("users_time_intervals")
}
